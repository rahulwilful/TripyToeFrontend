<style scoped>
.main {
  padding-top: 5rem;
}

.card {
  background: linear-gradient(to right, #575757, #a0a0a0);
  width: 50rem;
}

.list {
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(10px);
  height: 3rem;
  border-radius: 5px;
}

.table-content:hover {
  transition: transform 0.3s ease-in-out;
  transform: translateY(-5px);
}

.table {
  width: 70vw;
}

@media (max-width: 550px) {
  .table {
    width: 90vw;
  }
}
</style>

<template>
  <div class="main">
    <div class="d-flex justify-content-center align-items-center">
      <div>
        <div>
          <div>
            <h1 class="d-flex justify-content-center align-items-center" style="text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5)">My Itinerarys</h1>
            <div class="pt-3">
              <!-- <table class="table table-info table-bordered border-primary table-striped table-hover" style="">
                <thead class="">
                  <tr>
                    <th scope="col"><i class="bi bi-geo-alt-fill"></i> Destination</th>
                    <th scope="col"><i class="bi bi-people-fill"></i> Peaple</th>
                    <th scope="col"><i class="bi bi-calendar-week-fill"> </i> Days</th>
                    <th scope="col"><i class="bi bi-cash-coin"></i> Budget</th>
                  </tr>
                </thead>
                <tbody>
                  <tr class="table-content" v-for="itinerary in itinerarys" :key="itinerary" @click="getItinerary(itinerary._id)">
                    <td>{{ itinerary.destination }}</td>
                    <td>{{ itinerary.no_of_ppl }}</td>
                    <td>{{ itinerary.no_of_days }}</td>
                    <td>{{ itinerary.budget }}</td>
                  </tr>
                </tbody>
              </table> -->
              <!-- <div class="border    ">
                <div class="row d-flex justify-content-between">
                  <div class="col"><i class="bi bi-geo-alt-fill"></i> Destination</div>
                  <div class="col"><i class="bi bi-people-fill"></i> People</div>
                  <div class="col"><i class="bi bi-calendar-week-fill"></i> Days</div>
                  <div class="col"><i class="bi bi-cash-coin"></i> Budget</div>
                </div>

                <ul class="mt-3 d-flex justify-content-between" v-for="itinerary in itinerarys" :key="itinerary" @click="getItinerary(itinerary._id)" style="width: 100%">
                  <li class="">{{ itinerary.destination }}</li>
                  <li class="">{{ itinerary.no_of_ppl }}</li>
                  <li class="">{{ itinerary.no_of_days }}</li>
                  <li class="">{{ itinerary.budget }}</li>
                </ul>
              </div> -->
              <div class="container">
                <table style="width: 90vw">
                  <thead class="bg-primary">
                    <tr>
                      <th scope="col"><i class="bi bi-geo-alt-fill"></i> Destination</th>
                      <th scope="col"><i class="bi bi-people-fill"></i> People</th>
                      <th scope="col"><i class="bi bi-calendar-week-fill"></i> Days</th>
                      <th scope="col"><i class="bi bi-cash-coin"></i> Budget</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr class="table-content" v-for="itinerary in itinerarys" :key="itinerary" @click="getItinerary(itinerary._id)">
                      <td>{{ itinerary.destination }}</td>
                      <td>{{ itinerary.no_of_ppl }}</td>
                      <td>{{ itinerary.no_of_days }}</td>
                      <td>{{ itinerary.budget }}</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import axiosClient from "../axiosClient";
import { toast } from "vue3-toastify";
import "vue3-toastify/dist/index.css";
export default {
  name: "My Itinerarys",
  data() {
    return {
      id: "",
      itinerarys: [],
      itineraryId: "",
      destination: "",
      no_of_days: 0,
      start_date: "",
      no_of_ppl: 0,
      preference: "",
      budget: 0,
    };
  },
  async created() {
    try {
      const token = await axiosClient.get("user/getcurrentuser/").catch((err) => {
        console.log(err);
        if (err.response.status == 401) {
          this.$router.push("/login");
        }
      });
      console.log("token", token);
      this.id = token.data.data._id;

      const response = await axiosClient.get(`user/getitinerarys/${this.id}`);
      console.log(response);
      this.itinerarys = response.data.result;
      console.log(this.itinerarys);
    } catch (e) {
      console.log("error: ", e);
      this.$router.push("/login");
    }
  },

  methods: {
    async getItinerary(id) {
      this.itineraryId = id;
      console.log("getItinerary called");
      this.$router.push(`/itinerary/${this.id}/${this.itineraryId}`);
    },
  },
};
</script>
